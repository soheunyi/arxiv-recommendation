[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["backend/src"]

[tool.hatch.build.targets.wheel.force-include]
"start_servers.py" = "start_servers.py"
"main.py" = "main.py"

[project]
name = "arxiv-recommendation"
version = "0.1.0"
description = "Personal arXiv recommendation system with LLM embeddings"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.11"
dependencies = [
    # Core LLM integrations
    "openai>=1.52.0",
    "google-genai>=1.0.0", # New unified Google GenAI SDK
    # Data handling
    "pandas>=2.2.0",
    "numpy>=1.26.0",
    "requests>=2.31.0",
    "aiohttp>=3.9.0",
    "aiosqlite>=0.20.0",
    "aiofiles>=23.2.0",
    "h5py>=3.10.0",
    "filelock>=3.13.0",
    # Web interface
    "streamlit>=1.39.0",
    # Optional performance (for larger datasets)
    "faiss-cpu>=1.8.0",
    # Utilities
    "python-dotenv>=1.0.0",
    "rich>=13.0.0", # Beautiful CLI output
    "typer>=0.12.0", # CLI framework
    "psutil>=5.9.0", # Process monitoring
    "fastapi>=0.104.0", # API framework
    "uvicorn>=0.24.0", # ASGI server
    # Scheduling
    "apscheduler>=3.10.0", # Task scheduling
    # PDF processing and parsing
    "PyMuPDF>=1.23.0", # PDF text extraction
    # Search capabilities
    "ddgs>=1.0.0", # Academic paper search fallback (updated package name)
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
    
    # Code quality
    "ruff>=0.6.0",      # Fast linter & formatter
    "mypy>=1.8.0",      # Type checking
    
    # Development tools
    "pre-commit>=3.6.0",
    "jupyter>=1.0.0",   # For data exploration
]

web = [
    "streamlit>=1.39.0",
    "plotly>=5.17.0",   # Interactive charts
    "altair>=5.2.0",    # Streamlit-native charts
]

performance = [
    "faiss-cpu>=1.7.0", # CPU-based similarity search  
    "redis>=5.1.0",     # Advanced caching
]

[project.scripts]
arxiv-rec = "main:main"
arxiv-sync = "scripts.daily_sync:main"  
arxiv-setup = "scripts.setup_database:main"
arxiv-migrate-embeddings = "scripts.migrate_embeddings:main"
arxiv-cache-stats = "scripts.check_cache_stats:main"
arxiv-serve = "start_servers:main"  # Start both frontend and backend

[project.urls]
Homepage = "https://github.com/yourusername/arxiv-recommendation"
Repository = "https://github.com/yourusername/arxiv-recommendation"
Issues = "https://github.com/yourusername/arxiv-recommendation/issues"

[dependency-groups]
dev = [
    "matplotlib>=3.10.5",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "scikit-learn>=1.7.1",
    "seaborn>=0.13.2",
]

# Tool configurations
[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=backend --cov-report=term-missing"

[tool.coverage.run]
source = ["backend"]
omit = ["tests/*"]
